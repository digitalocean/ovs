From cb59c9ac43c09f137dfe2c47a70a46eb97d444c6 Mon Sep 17 00:00:00 2001
From: Ben Pfaff <blp@nicira.com>
Date: Tue, 9 Nov 2010 15:59:25 -0800
Subject: [PATCH 1/3] util: New function base_name().

---
 lib/util.c             |   40 ++++++++++++++++++++++++++++++++--------
 lib/util.h             |    1 +
 tests/automake.mk      |   12 ++++++------
 tests/dir_name.at      |   25 -------------------------
 tests/file_name.at     |   26 ++++++++++++++++++++++++++
 tests/test-dir_name.c  |   33 ---------------------------------
 tests/test-file_name.c |   39 +++++++++++++++++++++++++++++++++++++++
 tests/testsuite.at     |    2 +-
 9 files changed, 106 insertions(+), 74 deletions(-)
 delete mode 100644 tests/dir_name.at
 create mode 100644 tests/file_name.at
 delete mode 100644 tests/test-dir_name.c
 create mode 100644 tests/test-file_name.c

--- a/lib/util.c
+++ b/lib/util.c
@@ -394,6 +394,14 @@
     }
 }
 
+static char *
+all_slashes_name(const char *s)
+{
+    return xstrdup(s[0] == '/' && s[1] == '/' && s[2] != '/' ? "//"
+                   : s[0] == '/' ? "/"
+                   : ".");
+}
+
 /* Returns the directory name portion of 'file_name' as a malloc()'d string,
  * similar to the POSIX dirname() function but thread-safe. */
 char *
@@ -409,15 +417,31 @@
     while (len > 0 && file_name[len - 1] == '/') {
         len--;
     }
-    if (!len) {
-        return xstrdup((file_name[0] == '/'
-                        && file_name[1] == '/'
-                        && file_name[2] != '/') ? "//"
-                       : file_name[0] == '/' ? "/"
-                       : ".");
-    } else {
-        return xmemdup0(file_name, len);
+    return len ? xmemdup0(file_name, len) : all_slashes_name(file_name);
+}
+
+/* Returns the file name portion of 'file_name' as a malloc()'d string,
+ * similar to the POSIX basename() function but thread-safe. */
+char *
+base_name(const char *file_name)
+{
+    size_t end, start;
+
+    end = strlen(file_name);
+    while (end > 0 && file_name[end - 1] == '/') {
+        end--;
+    }
+
+    if (!end) {
+        return all_slashes_name(file_name);
     }
+
+    start = end;
+    while (start > 0 && file_name[start - 1] != '/') {
+        start--;
+    }
+
+    return xmemdup0(file_name + start, end - start);
 }
 
 /* If 'file_name' starts with '/', returns a copy of 'file_name'.  Otherwise,
--- a/lib/util.h
+++ b/lib/util.h
@@ -125,6 +125,7 @@
 
 char *get_cwd(void);
 char *dir_name(const char *file_name);
+char *base_name(const char *file_name);
 char *abs_file_name(const char *dir, const char *file_name);
 
 void ignore(bool x OVS_UNUSED);
--- a/tests/automake.mk
+++ b/tests/automake.mk
@@ -13,7 +13,7 @@
 	tests/daemon.at \
 	tests/daemon-py.at \
 	tests/vconn.at \
-	tests/dir_name.at \
+	tests/file_name.at \
 	tests/aes128.at \
 	tests/uuid.at \
 	tests/json.at \
@@ -63,7 +63,7 @@
 	tests/lcov/test-classifier \
 	tests/lcov/test-csum \
 	tests/lcov/test-dhcp-client \
-	tests/lcov/test-dir_name \
+	tests/lcov/test-file_name \
 	tests/lcov/test-flows \
 	tests/lcov/test-hash \
 	tests/lcov/test-hmap \
@@ -111,7 +111,7 @@
 	tests/valgrind/test-classifier \
 	tests/valgrind/test-csum \
 	tests/valgrind/test-dhcp-client \
-	tests/valgrind/test-dir_name \
+	tests/valgrind/test-file_name \
 	tests/valgrind/test-flows \
 	tests/valgrind/test-hash \
 	tests/valgrind/test-hmap \
@@ -178,9 +178,9 @@
 tests_test_csum_SOURCES = tests/test-csum.c
 tests_test_csum_LDADD = lib/libopenvswitch.a
 
-noinst_PROGRAMS += tests/test-dir_name
-tests_test_dir_name_SOURCES = tests/test-dir_name.c
-tests_test_dir_name_LDADD = lib/libopenvswitch.a
+noinst_PROGRAMS += tests/test-file_name
+tests_test_file_name_SOURCES = tests/test-file_name.c
+tests_test_file_name_LDADD = lib/libopenvswitch.a
 
 noinst_PROGRAMS += tests/test-flows
 tests_test_flows_SOURCES = tests/test-flows.c
--- a/tests/dir_name.at
+++ /dev/null
@@ -1,25 +0,0 @@
-AT_BANNER([test dir_name function])
-
-m4_define([CHECK_DIR_NAME],
-  [AT_SETUP([dir_name("$1") returns "$2"])
-   AT_KEYWORDS([dir_name])
-   AT_CHECK([test-dir_name "AS_ESCAPE($1)"], [0], [$2
-])
-   AT_CLEANUP])
-
-# These are the test cases given in POSIX for dirname().
-CHECK_DIR_NAME([/usr/lib], [/usr])
-CHECK_DIR_NAME([/usr/], [/])
-CHECK_DIR_NAME([usr], [.])
-CHECK_DIR_NAME([/], [/])
-CHECK_DIR_NAME([.], [.])
-CHECK_DIR_NAME([..], [.])
-CHECK_DIR_NAME([//], [//])      # / is also allowed
-CHECK_DIR_NAME([//foo], [//])   # / is also allowed
-CHECK_DIR_NAME([], [.])
-
-# Additional test cases.
-CHECK_DIR_NAME([dir/file], [dir])
-CHECK_DIR_NAME([dir/file/], [dir])
-CHECK_DIR_NAME([dir/file//], [dir])
-CHECK_DIR_NAME([///foo], [/])
--- /dev/null
+++ b/tests/file_name.at
@@ -0,0 +1,26 @@
+AT_BANNER([test dir_name and base_name functions])
+
+m4_define([CHECK_FILE_NAME],
+  [AT_SETUP([components of "$1" are "$2", "$3"])
+   AT_KEYWORDS([dir_name base_name])
+   AT_CHECK([test-file_name "AS_ESCAPE($1)"], [0], [$2
+$3
+])
+   AT_CLEANUP])
+
+# These are the test cases given in POSIX for dirname() and basename().
+CHECK_FILE_NAME([/usr/lib], [/usr], [lib])
+CHECK_FILE_NAME([/usr/], [/], [usr])
+CHECK_FILE_NAME([usr], [.], [usr])
+CHECK_FILE_NAME([/], [/], [/])
+CHECK_FILE_NAME([.], [.], [.])
+CHECK_FILE_NAME([..], [.], [..])
+CHECK_FILE_NAME([//], [//], [//])       # / is also allowed
+CHECK_FILE_NAME([//foo], [//], [foo])   # / is also allowed for dirname
+CHECK_FILE_NAME([], [.], [.])
+
+# Additional test cases.
+CHECK_FILE_NAME([dir/file], [dir], [file])
+CHECK_FILE_NAME([dir/file/], [dir], [file])
+CHECK_FILE_NAME([dir/file//], [dir], [file])
+CHECK_FILE_NAME([///foo], [/], [foo])
--- a/tests/test-dir_name.c
+++ /dev/null
@@ -1,33 +0,0 @@
-/*
- * Copyright (c) 2009 Nicira Networks.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at:
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-#include <config.h>
-#include "util.h"
-#include <stdlib.h>
-
-int
-main(int argc, char *argv[])
-{
-    int i;
-
-    for (i = 1; i < argc; i++) {
-        char *dir = dir_name(argv[i]);
-        puts(dir);
-        free(dir);
-    }
-
-    return 0;
-}
--- /dev/null
+++ b/tests/test-file_name.c
@@ -0,0 +1,39 @@
+/*
+ * Copyright (c) 2009, 2010 Nicira Networks.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at:
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include <config.h>
+#include "util.h"
+#include <stdlib.h>
+
+int
+main(int argc, char *argv[])
+{
+    int i;
+
+    for (i = 1; i < argc; i++) {
+        char *dir, *base;
+
+        dir = dir_name(argv[i]);
+        puts(dir);
+        free(dir);
+
+        base = base_name(argv[i]);
+        puts(base);
+        free(base);
+    }
+
+    return 0;
+}
--- a/tests/testsuite.at
+++ b/tests/testsuite.at
@@ -43,7 +43,7 @@
 m4_include([tests/daemon.at])
 m4_include([tests/daemon-py.at])
 m4_include([tests/vconn.at])
-m4_include([tests/dir_name.at])
+m4_include([tests/file_name.at])
 m4_include([tests/aes128.at])
 m4_include([tests/uuid.at])
 m4_include([tests/json.at])
